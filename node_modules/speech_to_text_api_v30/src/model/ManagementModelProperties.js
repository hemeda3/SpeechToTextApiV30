/*
 * Speech to Text API v3.0
 * Speech to Text API v3.0.
 *
 * OpenAPI spec version: v3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechToTextApiV30) {
      root.SpeechToTextApiV30 = {};
    }
    root.SpeechToTextApiV30.ManagementModelProperties = factory(root.SpeechToTextApiV30.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The ManagementModelProperties model module.
   * @module model/ManagementModelProperties
   * @version v3.0
   */

  /**
   * Constructs a new <code>ManagementModelProperties</code>.
   * @alias module:model/ManagementModelProperties
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>ManagementModelProperties</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ManagementModelProperties} obj Optional instance to populate.
   * @return {module:model/ManagementModelProperties} The populated <code>ManagementModelProperties</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('purposes'))
        obj.purposes = ApiClient.convertToType(data['purposes'], ['String']);
      if (data.hasOwnProperty('modelClass'))
        obj.modelClass = ApiClient.convertToType(data['modelClass'], 'String');
      if (data.hasOwnProperty('vadKind'))
        obj.vadKind = ApiClient.convertToType(data['vadKind'], 'String');
      if (data.hasOwnProperty('usesOnlineInterpolation'))
        obj.usesOnlineInterpolation = ApiClient.convertToType(data['usesOnlineInterpolation'], 'Boolean');
      if (data.hasOwnProperty('cascadeDelete'))
        obj.cascadeDelete = ApiClient.convertToType(data['cascadeDelete'], 'Boolean');
      if (data.hasOwnProperty('isDynamicGrammarSupported'))
        obj.isDynamicGrammarSupported = ApiClient.convertToType(data['isDynamicGrammarSupported'], 'Boolean');
      if (data.hasOwnProperty('usesHalide'))
        obj.usesHalide = ApiClient.convertToType(data['usesHalide'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/ManagementModelProperties.PurposesEnum>} purposes
   */
  exports.prototype.purposes = undefined;

  /**
   * @member {module:model/ManagementModelProperties.ModelClassEnum} modelClass
   */
  exports.prototype.modelClass = undefined;

  /**
   * @member {module:model/ManagementModelProperties.VadKindEnum} vadKind
   */
  exports.prototype.vadKind = undefined;

  /**
   * @member {Boolean} usesOnlineInterpolation
   */
  exports.prototype.usesOnlineInterpolation = undefined;

  /**
   * @member {Boolean} cascadeDelete
   */
  exports.prototype.cascadeDelete = undefined;

  /**
   * @member {Boolean} isDynamicGrammarSupported
   */
  exports.prototype.isDynamicGrammarSupported = undefined;

  /**
   * @member {Boolean} usesHalide
   */
  exports.prototype.usesHalide = undefined;



  /**
   * Allowed values for the <code>purposes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PurposesEnum = {
    /**
     * value: "BatchTranscription"
     * @const
     */
    batchTranscription: "BatchTranscription",

    /**
     * value: "OnlineTranscription"
     * @const
     */
    onlineTranscription: "OnlineTranscription",

    /**
     * value: "LanguageAdaptation"
     * @const
     */
    languageAdaptation: "LanguageAdaptation",

    /**
     * value: "AcousticAdaptation"
     * @const
     */
    acousticAdaptation: "AcousticAdaptation",

    /**
     * value: "LanguageOnlineInterpolation"
     * @const
     */
    languageOnlineInterpolation: "LanguageOnlineInterpolation"
  };


  /**
   * Allowed values for the <code>modelClass</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ModelClassEnum = {
    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Unifiedv2"
     * @const
     */
    unifiedv2: "Unifiedv2",

    /**
     * value: "Unifiedv4"
     * @const
     */
    unifiedv4: "Unifiedv4",

    /**
     * value: "Unifiedv4Pch"
     * @const
     */
    unifiedv4Pch: "Unifiedv4Pch"
  };


  /**
   * Allowed values for the <code>vadKind</code> property.
   * @enum {String}
   * @readonly
   */
  exports.VadKindEnum = {
    /**
     * value: "None"
     * @const
     */
    none: "None",

    /**
     * value: "Tuned"
     * @const
     */
    tuned: "Tuned"
  };

  return exports;

}));
