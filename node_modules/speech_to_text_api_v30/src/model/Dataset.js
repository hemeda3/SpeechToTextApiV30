/*
 * Speech to Text API v3.0
 * Speech to Text API v3.0.
 *
 * OpenAPI spec version: v3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.21
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DatasetProperties', 'model/EntityReference', 'model/Links'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DatasetProperties'), require('./EntityReference'), require('./Links'));
  } else {
    // Browser globals (root is window)
    if (!root.SpeechToTextApiV30) {
      root.SpeechToTextApiV30 = {};
    }
    root.SpeechToTextApiV30.Dataset = factory(root.SpeechToTextApiV30.ApiClient, root.SpeechToTextApiV30.DatasetProperties, root.SpeechToTextApiV30.EntityReference, root.SpeechToTextApiV30.Links);
  }
}(this, function(ApiClient, DatasetProperties, EntityReference, Links) {
  'use strict';

  /**
   * The Dataset model module.
   * @module model/Dataset
   * @version v3.0
   */

  /**
   * Constructs a new <code>Dataset</code>.
   * @alias module:model/Dataset
   * @class
   * @param kind {module:model/Dataset.KindEnum} The kind of the dataset.
   * @param displayName {String} The display name of the object.
   * @param locale {String} The locale of the contained data.
   */
  var exports = function(kind, displayName, locale) {
    this.kind = kind;
    this.displayName = displayName;
    this.locale = locale;
  };

  /**
   * Constructs a <code>Dataset</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Dataset} obj Optional instance to populate.
   * @return {module:model/Dataset} The populated <code>Dataset</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('links'))
        obj.links = Links.constructFromObject(data['links']);
      if (data.hasOwnProperty('properties'))
        obj.properties = DatasetProperties.constructFromObject(data['properties']);
      if (data.hasOwnProperty('kind'))
        obj.kind = ApiClient.convertToType(data['kind'], 'String');
      if (data.hasOwnProperty('self'))
        obj.self = ApiClient.convertToType(data['self'], 'String');
      if (data.hasOwnProperty('displayName'))
        obj.displayName = ApiClient.convertToType(data['displayName'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('project'))
        obj.project = EntityReference.constructFromObject(data['project']);
      if (data.hasOwnProperty('contentUrl'))
        obj.contentUrl = ApiClient.convertToType(data['contentUrl'], 'String');
      if (data.hasOwnProperty('customProperties'))
        obj.customProperties = ApiClient.convertToType(data['customProperties'], {'String': 'String'});
      if (data.hasOwnProperty('locale'))
        obj.locale = ApiClient.convertToType(data['locale'], 'String');
      if (data.hasOwnProperty('lastActionDateTime'))
        obj.lastActionDateTime = ApiClient.convertToType(data['lastActionDateTime'], 'Date');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('createdDateTime'))
        obj.createdDateTime = ApiClient.convertToType(data['createdDateTime'], 'Date');
    }
    return obj;
  }

  /**
   * The links for additional actions or content related to this dataset.
   * @member {module:model/Links} links
   */
  exports.prototype.links = undefined;

  /**
   * Additional configuration options when creating a new dataset and additional metadata provided by the service.
   * @member {module:model/DatasetProperties} properties
   */
  exports.prototype.properties = undefined;

  /**
   * The kind of the dataset.
   * @member {module:model/Dataset.KindEnum} kind
   */
  exports.prototype.kind = undefined;

  /**
   * The location of this entity.
   * @member {String} self
   */
  exports.prototype.self = undefined;

  /**
   * The display name of the object.
   * @member {String} displayName
   */
  exports.prototype.displayName = undefined;

  /**
   * The description of the object.
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * The project, the dataset is associated with.
   * @member {module:model/EntityReference} project
   */
  exports.prototype.project = undefined;

  /**
   * The URL of the data for the dataset.
   * @member {String} contentUrl
   */
  exports.prototype.contentUrl = undefined;

  /**
   * The custom properties of this entity. The maximum allowed key length is 64 characters, the maximum  allowed value length is 256 characters and the count of allowed entries is 10.
   * @member {Object.<String, String>} customProperties
   */
  exports.prototype.customProperties = undefined;

  /**
   * The locale of the contained data.
   * @member {String} locale
   */
  exports.prototype.locale = undefined;

  /**
   * The time-stamp when the current status was entered.  The time stamp is encoded as ISO 8601 date and time format  (\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
   * @member {Date} lastActionDateTime
   */
  exports.prototype.lastActionDateTime = undefined;

  /**
   * The status of the object.
   * @member {module:model/Dataset.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * The time-stamp when the object was created.  The time stamp is encoded as ISO 8601 date and time format  (\"YYYY-MM-DDThh:mm:ssZ\", see https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations).
   * @member {Date} createdDateTime
   */
  exports.prototype.createdDateTime = undefined;



  /**
   * Allowed values for the <code>kind</code> property.
   * @enum {String}
   * @readonly
   */
  exports.KindEnum = {
    /**
     * value: "Language"
     * @const
     */
    language: "Language",

    /**
     * value: "Acoustic"
     * @const
     */
    acoustic: "Acoustic",

    /**
     * value: "Pronunciation"
     * @const
     */
    pronunciation: "Pronunciation",

    /**
     * value: "AudioFiles"
     * @const
     */
    audioFiles: "AudioFiles"
  };


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "NotStarted"
     * @const
     */
    notStarted: "NotStarted",

    /**
     * value: "Running"
     * @const
     */
    running: "Running",

    /**
     * value: "Succeeded"
     * @const
     */
    succeeded: "Succeeded",

    /**
     * value: "Failed"
     * @const
     */
    failed: "Failed"
  };

  return exports;

}));
